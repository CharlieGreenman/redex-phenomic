{"type":"published","id":"bs-enzyme","name":"bs-enzyme","version":"0.3.0","description":"Bucklescript bindings for Enzyme","author":"Rhys Powell","license":"MIT","keywords":["bucklescript","testing","enzyme"],"body":"# bs-enzyme - [BuckleScript](https://github.com/bucklescript/bucklescript) bindings for [Enzyme](https://github.com/airbnb/enzyme) [![npm (scoped)](https://img.shields.io/npm/v/bs-enzyme.svg?style=flat-square)](https://www.npmjs.com/package/bs-enzyme)\n\n:construction: **Note:** This package is still _very_ experimental. Expect\nfrequent, breaking changes right up until 1.0 is released. :construction:\n\n---\n\n## Status\n\n* Most of the `shallow` API is implemented\n* The `simulate` method is currently wrapped in multiple `simulateN` functions\n  to handle mixed variadic arguments\n* Neither the `render` nor `mount` APIs are implemented\n* I haven't extensively tested most of the functions, so some might be broken\n\n## Example\n\nUsing the excellent [bs-jest](https://github.com/reasonml-community/bs-jest)\n\n```reason\nopen Jest;\n\nEnzyme.configureEnzyme(Enzyme.react_16_adapter());\n\nlet setup = (~title=\"Test\", ~handleClick=(_evt) => (), ()) =>\n  Enzyme.shallow(<DummyComponent title handleClick />);\n\nlet header = (wrapper) =>\nwrapper\n  |> Enzyme.find(\"#header\")\n  |> Enzyme.first;\n\nlet listItems = (wrapper) =>\n  wrapper\n  |> Enzyme.find(\"#list\")\n  |> Enzyme.children;\n\ndescribe(\"DummyComponent\", () => {\n  open Expect;\n\n  test(\"renders a #header\", () => {\n    let title = \"A test title\";\n    let wrapper = setup(~title, ());\n    let headerNodes = wrapper |> header;\n    expect(Enzyme.length(headerNodes)) |> toBe(1)\n  });\n\n  test(\"has the expected h1 tag in the #header\", () => {\n    let title = \"A test title\";\n    let wrapper = setup(~title, ());\n    let expectedNode = <h1> (ReasonReact.stringToElement(title)) </h1>;\n    expect(Enzyme.contains(expectedNode, wrapper)) |> toBe(true)\n  });\n\n  test(\"initially has its `clicked` state set to false\", () => {\n    let wrapper = setup();\n    let {clicked}: DummyComponent.state = Enzyme.state(wrapper);\n    expect(clicked) |> toBe(false)\n  });\n\n  test(\"folds left properly\", () => {\n    let items = setup() |> listItems;\n    let result = Enzyme.foldLeft((text, node) => text ++ Enzyme.text(node), \"\", items);\n    expect(result) |> toBe(\"OneTwoThree\")\n  });\n});\n```\n\nSee more examples in the project's\n[tests directory](https://github.com/rpowelll/bs-enzyme/tree/master/src/__tests__).\n\n## Installation\n\n```\n$ npm install --save-dev bs-enzyme\n```\n\nThen add `bs-enzyme` to `bs-dev-dependencies` in your `bsconfig.json`:\n\n```json\n{\n  ...\n  \"bs-dev-dependencies\": [\"bs-enzyme\"]\n}\n```\n\n**Note:** If you're using this package with `bs-jest`, be sure to list\n`bs-enzyme` first in your dependencies.","analyzed":"2017-12-15T17:31:18.968Z","updated":"2017-12-15T17:31:18.968Z","stars":15,"score":0.6032854205957334,"quality":0.7844486647188749,"popularity":0.05134452467111535,"maintenance":0.999943535843373,"homepageUrl":"https://github.com/rpowelll/bs-enzyme#readme","repositoryUrl":"https://github.com/rpowelll/bs-enzyme","npmUrl":"https://www.npmjs.com/package/bs-enzyme","issuesUrl":"https://github.com/rpowelll/bs-enzyme/issues","docsUrl":null}