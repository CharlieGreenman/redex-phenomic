{"type":"published","id":"bs-css","name":"bs-css","version":"5.2.0","description":"BuckleScript bindings for glamor","author":"Jan Poeschko","license":"ISC","keywords":["css","glamor","bucklescript","reason"],"body":"# bs-css\n\nstatically typed DSL for writing css in reason.\n\nBs-css is a statically typed interface to [Glamor](https://github.com/threepointone/glamor)\n\n## Installation\n\n```sh\nnpm install --save bs-css\n```\n\nIn your `bsconfig.json`, include `\"bs-css\"` in the `bs-dependencies`.\n\n## Usage\n\n```reason\nmodule Theme = {\n  open Css;\n  let textColor = hex(\"333\");\n  let basePadding = px(15);\n};\n\nlet styles = Css.({\n  \"card\": style([\n    backgroundColor(white),\n    boxShadow(~y=3, ~blur=5, rgba(0, 0, 0, 0.3)),\n    padding(Theme.basePadding)\n  ]),\n  \"title\": style([\n    fontSize(rem(1.5)),\n    color(Theme.textColor),\n    marginBottom(Theme.basePadding)\n  ])\n});\n\n<div className=styles##card>\n  <h1 className=styles##title> (ReasonReact.stringToElement(\"Hello\")) </h1>\n</div>\n```\n\n**Merging css rules**\n\nYou can merge css rules using `merge`\n\n```reason\nlet text_primary = style([ color(white) ]);\nlet small = style([ fontSize(px(10)) ]);\n\n\n<p className=merge([ text_primary, small ])> ...\n```\n\nbs-css will make sure that rules are merged in the correct order, managing nesting and precedence for you.\n\n**Global css**\n\n You can defined global css rules with `global`\n\n ```reason\n Css.(\n   global(\"body\", [margin(px(0))])\n );\n\n Css.(\n   global(\"h1, h2, h3\", [color(rgb(33, 33, 33))])\n );\n ```\n\n**Keyframes**\n\ndefine animation keyframes;\n\n```reason\nlet bounce = Css.keyframes([\n  (\"0%\", [ transform( scale(0.1, 0.1) ),  opacity(0.0) ]),\n  (\"60%\", [ transform( scale(1.2, 1.2) ),  opacity(1.0) ]),\n  (\"100%\", [ transform( scale(1.0,1.0) ), opacity(1.0) ])\n]);\n\nlet styles = css([\n  animationName(bounce),\n  animationDuration(2000),\n  width(px(50)),\n  height(px(50)),\n  backgroundColor(rgb(255, 0, 0))\n]);\n\n// ...\n<div className=styles>\n  (ReasonReact.stringToElement(\"bounce!\"))\n</div>\n```\n\n\n## Development\n\n```sh\nnpm run start\n```\n\n## Where is the documentation?\nIts on its way!\nuntil then you can check out [css.rei](./src/Css.rei).\n\n## Thanks\nThanks to [glamor](https://github.com/threepointone/glamor) which is doing all the heavi lifting.\nThanks to [bs-glamor](https://github.com/poeschko/bs-glamor) which this repo was forked from.\nThanks to [elm-css](https://github.com/rtfeldman/elm-css) for dsl design inspiration.","analyzed":"2017-12-21T21:10:32.010Z","updated":"2017-12-21T21:10:32.010Z","stars":48,"score":0.5409310823896777,"quality":0.5399585366387434,"popularity":0.08269816498713677,"maintenance":0.9999976104358768,"homepageUrl":"https://github.com/SentiaAnalytics/bs-css#readme","repositoryUrl":"https://github.com/SentiaAnalytics/bs-css","npmUrl":"https://www.npmjs.com/package/bs-css","issuesUrl":"https://github.com/SentiaAnalytics/bs-css/issues","docsUrl":null}