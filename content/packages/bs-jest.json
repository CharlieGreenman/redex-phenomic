{"type":"published","id":"bs-jest","name":"bs-jest","version":"0.2.0","description":"BuckleScript bindings to the Jest testing framework","author":"glennsl","license":"MIT","keywords":["test","jest","bucklescript"],"body":"# bs-jest - [BuckleScript](https://github.com/bucklescript/bucklescript) bindings for [Jest](https://github.com/facebook/jest) [![Build Status](https://travis-ci.org/reasonml-community/bs-jest.svg?branch=master)](https://travis-ci.org/reasonml-community/bs-jest)\n\nVery very **experimental** (yep, that's one less \"very\" than before! Progress!) and **WIP**\n\n## Status\n\n* [Global](https://facebook.github.io/jest/docs/api.html#content): Fully implemented and tested, apart from `require.*`\n* [Expect](https://facebook.github.io/jest/docs/expect.html#content): Mostly implemented. Functionality that makes sense only for JS interop have been moved to `ExpectJS`. Some functionality does not make sense in a typed language, or is not possible to implement sensibly in ML.\n* [Mock Functions](https://facebook.github.io/jest/docs/mock-function-api.html#content): Experimental and unsafe implementation, very much in flux. The Jest bindings will most likely be relegated to the `MockJs` module as it's very quirky to use with native code. A separate native from-scratch implementation might suddenly appear as `Mock`.\n* [The Jest Object](https://facebook.github.io/jest/docs/jest-object.html#content): Fake timers are fully implemented and tested. Mock functionality has been moved to `JestJs`. It's mostly implemented, but experimental and largely untested.\n* [Snapshotting] Completely untested. Expect functions exist, but there's currently no way to implement custom snapshot serializers.\n\n## Example\n\n```ml\n(* OCaml *)\nopen Jest\n\nlet _ =\n\ndescribe \"Expect\" (fun () -> \n  let open Expect in\n\n  test \"toBe\" (fun () ->\n    expect (1 + 2) |> toBe 3);\n);\n\ndescribe \"Expect.Operators\" (fun () -> \n  let open Expect in\n  let open! Expect.Operators in\n\n  test \"==\" (fun () ->\n    expect (1 + 2) == 3);\n);\n```\n\n```reason\n/* Reason */\nopen Jest;\n\nlet _ =\n\ndescribe \"Expect\" (fun () => {\n  open Expect;\n\t\n  test \"toBe\" (fun () =>\n    expect (1 + 2) |> toBe 3)\n});\n    \ndescribe \"Expect.Operators\" (fun () => {\n  open Expect;\n  open! Expect.Operators;\n  \n  test \"==\" (fun () =>\n    expect (1 + 2) === 3)\n});\n```\n\nSee [the tests](https://github.com/reasonml-community/bs-jest/tree/master/__tests__) for more examples.\n\n## Installation\n\n```sh\nnpm install --save-dev bs-jest\n```\n\nThen add `bs-jest` to `bs-dev-dependencies` in your `bsconfig.json`:\n```js\n{\n  ...\n  \"bs-dev-dependencies\": [\"bs-jest\"]\n}\n```\nThen add `__tests__` to `sources` in your `bsconfig.json`:\n```js\n\"sources\": [\n  {\n    \"dir\": \"src\"\n  },\n  {\n    \"dir\": \"__tests__\",\n    \"type\": \"dev\"\n  }\n]\n```\n\n## Usage\n\nPut tests in a `__tests__` directory and use the suffix `*test.ml`/`*test.re` (Make sure to use valid module names. e.g. `<name>_test.re` is valid while `<name>.test.re` is not). When compiled they will be put in a `__tests__` directory under `lib`, with a `*test.js` suffix, ready to be picked up when you run `jest`. If you're not already familiar with [Jest](https://github.com/facebook/jest), see [the Jest documentation](https://facebook.github.io/jest/).\n\n## Contribute\n```sh\ngit clone https://github.com/reasonml-community/bs-jest.git\ncd bs-jest\nnpm install\n```\n\nThen build and run tests with `npm test`, start watchers for `bsb`and `jest` with `npm run watch:bsb` and `npm run watch:jest` respectively. Install `screen` to be able to use `npm run watch:screen` to run both watchers in a single terminal window.\n\n## Changes\n\n### 0.2.0\n* Removed deprecations\n* Added `testAll`, `Only.testAll`, `Skip.testAll` that generates tests from a list of inputs\n* Fixed type signature of `fail`\n* Added `expectFn`","analyzed":"2017-12-22T23:34:32.034Z","updated":"2017-12-22T23:34:32.034Z","stars":55,"score":0.5199543870901007,"quality":0.8155999818221106,"popularity":0.12643997926868442,"maintenance":0.6600582851412229,"homepageUrl":"https://github.com/reasonml-community/bs-jest#readme","repositoryUrl":"https://github.com/reasonml-community/bs-jest","npmUrl":"https://www.npmjs.com/package/bs-jest","issuesUrl":"https://github.com/reasonml-community/bs-jest/issues","docsUrl":null}