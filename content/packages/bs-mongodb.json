{"type":"published","id":"bs-mongodb","name":"bs-mongodb","version":"0.1.2","description":"[![Build Status](https://travis-ci.org/PeteProgrammer/bs-mongodb.svg?branch=master)](https://travis-ci.org/PeteProgrammer/bs-mongodb)","license":"MIT","keywords":["bucklescript"],"body":"# MongoDB bindings for bucklescript\n\n[![Build Status](https://travis-ci.org/PeteProgrammer/bs-mongodb.svg?branch=master)](https://travis-ci.org/PeteProgrammer/bs-mongodb)\n\nThis library contains preliminary bindings to MongoDB. There is very little\ndocumentation yet, and far from all features are implemented.\n\nThis library is need-driven, I am adding bindings as I need them. If you add\nbindings to this, feel free to send me a pull request.\n\n## Future breaking change - be aware\n\nWhen I first created the `Collection.createIndex` function, I needed to pass\noptions. But it didn't occur to me then, that the options should be options. So\nin a future version, the options will be passed as an optional argument.\nCurrently there is a `Collection.createIndexNoOpts` for a no-options call.\n\n## Handling Async code\n\nThe mongo driver is inherently async, every result is either provided to a\ncallback, or delivered in a Promise. I personally use the callbacks with [my own\nasync handling library](https://github.com/PeteProgrammer/resync).\n\nBut I didn't want to push a specific async library upon any users of this\nlibrary, so in order to use the library, you construct the module through a\nfunctor, that takes a `CallbackHandler` as argument.\n\nThis piece of code is from my project where I bind the mongo library to my async\nlibrary.\n\n```\ninclude MongoDB;\n\nmodule AsyncHandler : CallbackHandler with type t('a) = Async.t('a) = {\n  type t('a) = Async.t('a);\n  let callbackConverter = (x:callback('a)) : Async.t('a) => x |> Async.from_js;\n};\n\ninclude Make(AsyncHandler);\n```\n\nIf you prefer to use a `(Js.Result.t('a,MongoError.t) => unit) => unit`, you can\ndo so. I might get some examples up.\n\nAnd I will try to see if I can get it to work with Promises, for those who\nprefer this route (the underlying node library returns a promise, if no callback\nis passed to the aync functions).","analyzed":"2017-12-10T09:43:29.662Z","updated":"2017-12-10T09:43:29.662Z","score":0.356113524754965,"quality":0.7844486647188749,"popularity":0.011749310493245402,"maintenance":0.3333333333333333,"npmUrl":"https://www.npmjs.com/package/bs-mongodb","docsUrl":null}