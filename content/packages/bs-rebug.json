{"type":"published","id":"bs-rebug","name":"bs-rebug","version":"0.2.1","description":"Originally a port of [debug](https://github.com/visionmedia/debug) to BuckleScript, but has since expanded a bit.","author":"glennsl","license":"MIT","keywords":["bucklescript","debug"],"body":"# rebug\n\nOriginally a port of [debug](https://github.com/visionmedia/debug) to BuckleScript, but has since expanded a bit.\n\n## Status\n\n* Browser back-end has been implemented, Node.js back-end has not\n* Formatting isn't properly supported yet\n* Colors are always on\n* Isn't quite as customizable (yet)\n\n## Example\n\n```reason\n/* Reason */\n\n/* creates a logger with the given namespace */\nlet debug = Debug.make(\"my:namespace\");\n\n/* debug.log* logs the message only if the namespace of the logger is enabled */\ndebug.log1(\"The red cow jumps over the lazy giraffe\");\n\n/* debug.error* will log the message regardless of whether the namespace is\n   enabled, format it as an error and include a stack trace */\ntry (...) {\n| error => a.error2(\"Error occurred while doing stuff: \", error)\n};\n\n/* debug.fn* groups any log output during its execution, and logs the arguments\n   passed to and the value returned from the function */\nlet loggedParse = debug.fn1(\"JSON.parse\", Js.Json.parseExn);\n```\n\nSee [examples](https://github.com/glennsl/rebug/blob/master/examples/) for more.\n\n## Installation\n\n```sh\nnpm install --save bs-rebug\n```\n\nThen add `bs-rebug` to `bs-dependencies` in your `bsconfig.json`:\n```js\n{\n  ...\n  \"bs-dependencies\": [\"bs-rebug\"]\n}\n```","analyzed":"2017-12-17T14:02:15.043Z","updated":"2017-12-17T14:02:15.043Z","score":0.24344298637690448,"quality":0.41167083833848434,"popularity":0.00956484094583832,"maintenance":0.3331258301266165,"npmUrl":"https://www.npmjs.com/package/bs-rebug","docsUrl":null}