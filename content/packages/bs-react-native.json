{"type":"published","id":"bs-react-native","name":"bs-react-native","version":"0.5.0","description":"[![Build Status](https://travis-ci.org/reasonml-community/bs-react-native.svg?branch=master)](https://travis-ci.org/reasonml-community/bs-react-native)","license":"MIT","keywords":["react-native","bucklescript","reason"],"body":"# [BuckleScript](https://github.com/bloomberg/bucklescript) bindings for [React Native](https://github.com/facebook/react-native)\n[![Build Status](https://travis-ci.org/reasonml-community/bs-react-native.svg?branch=master)](https://travis-ci.org/reasonml-community/bs-react-native)\n\n## Getting started\n\nGreat that you want to use Reason with React Native! To get everything running are just a couple of steps.\nLet's assume that you already have a React Native project. Otherwise follow the React Native [instructions](http://facebook.github.io/react-native/docs/getting-started.html) until you have your app running.\n\n1. Install [Bucklescript](https://github.com/bloomberg/bucklescript) (the Reason -> JS compiler), [Reason-React](https://github.com/reasonml/reason-react) and `bs-react-native`:\n```sh\n# substitute yarn with npm if you prefer\nyarn add bs-platform reason-react bs-react-native\n```\n\n2. Create a `re` folder (there will be your Reason code)\n3. Create a `bsconfig.json` with the following content file in your project root\n```json\n{\n    \"name\": \"my-awesome-app\",\n    \"reason\": {\n        \"react-jsx\": 2\n    },\n    \"bsc-flags\": [\"-bs-super-errors\"],\n    \"bs-dependencies\": [\"bs-react-native\", \"reason-react\"],\n    \"sources\": [{\n        \"dir\": \"re\"\n    }],\n    \"refmt\": 3\n}\n```\n4. You are nearly done, the last configuration before we get to the fun stuff. In your `package.json` add to the `\"scripts\"` section two scripts:\n\n```json\n\"scripts\": {\n  ...\n  \"build\": \"bsb -make-world -clean-world\",\n  \"watch\": \"bsb -make-world -clean-world -w\"\n}\n```\n\n5. Now you can build all your (so far nonexsisting) Reason in two modes:\n  - `yarn run build` performs a single build\n  - `yarn run watch` enters the watch mode\n6. Now we come to the fun stuff! Create a new file `re/app.re` and make it look like this:\n```reason\nopen BsReactNative;\n\nlet app = () =>\n  <View style=Style.(style([flex(1.), justifyContent(`center), alignItems(`center)]))>\n    <Text value=\"Reason is awesome!\" />\n  </View>;\n```\nand start the watcher with `yarn run watch` if you haven't done it yet.\n\n7. We are nearly done! We now have to adopt the `index.ios.js` / `index.android.js` to look like this\n```js\nimport { app } from \"./lib/js/re/app.js\";\nimport React from \"react\";\nimport {\n  AppRegistry\n} from 'react-native';\n\nAppRegistry.registerComponent('MyAwesomeProject', () => app);\n```\n**Note:** Make sure that the first argument to `AppRegistry.registerComponent` is **your** correct project name.\n\nIf you are using `react-native-scripts`, then you will need to modify `App.js` to be like this\n```js\nimport { app } from \"./lib/js/re/app.js\";\n\nexport default app;\n```\n\n8. Now go to a new tab and start your app with `react-native run-ios` or `react-native run-android`.\n\n9. Great you are all set up! Check the source of `bs-react-native` to find out more about the implemented APIs and Components. If you get stuck just ask on our [Discord Server](https://discord.gg/reasonml)! Happy Hacking!\n\n\nHere are some more things which will be probably useful for you:\n- [Reason-React Documentation](https://reasonml.github.io/reason-react/)\n- [Bucklescript Manual](http://bucklescript.github.io/bucklescript/Manual.html)\n\n## Can I really build my React Native app with Reason?\nYes! Check out the [Seattle JS Conf App](https://github.com/FormidableLabs/seattlejsconf-app) for a real world App written with Reason.\n\n### Disclaimer\n\nThere are some components and APIs missing. You can find an overview of the implemented components and APIs [here](STATUS.md). Contributions of Components and APIs are very welcome! The bindings are targeted to React Native **0.46+**.\n\n## Style\nSince we have a proper type system we can make styles **typesafe**! Therefore styles are a little bit different declared than in JavaScript:\n```reason\nopen BsReactNative;\n\n/* inline styles */\n<View\n  style=(\n    Style.style([\n      Style.flexDirection(`column),\n      Style.backgroundColor(\"#6698FF\"),\n      Style.marginTop(5)\n    ])\n  )\n/>;\n\n/* inline styles with a local open */\n<View style=Style.(style([flexDirection(`column), backgroundColor(\"#6698FF\"), marginTop(5)])) />;\n\n/* StyleSheets with a local open */\nlet styles =\n  StyleSheet.create(\n    Style.({\"wrapper\": style([flexDirection(`column), backgroundColor(\"#6698FF\"), marginTop(5)])})\n  );\n\n<View style=styles##wrapper />;\n```\n\n## Toubleshooting\n\n### `Native module cannot be null` with create-react-native-app\n\nCurrently BuckleScript can generate `import * as ReactNative from 'react-native'`, which breaks\ncreate-react-native-app. To get around this you can force BuckleScript to generate CommonJS\nmodules instead of ES Modules using:\n\n```json\n/* bsconfig.json */\n{\n  /* ... */\n  \"package-specs\": [\n    {\n      \"module\": \"commonjs\"\n    }\n  ]\n}\n```","analyzed":"2017-12-15T19:43:09.201Z","updated":"2017-12-15T19:43:09.201Z","stars":186,"score":0.600522918737319,"quality":0.7058660980182657,"popularity":0.110758091734607,"maintenance":0.9999935920706481,"homepageUrl":"https://github.com/reasonml-community/bs-react-native#readme","repositoryUrl":"https://github.com/reasonml-community/bs-react-native","npmUrl":"https://www.npmjs.com/package/bs-react-native","issuesUrl":"https://github.com/reasonml-community/bs-react-native/issues","docsUrl":null}