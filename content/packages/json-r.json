{"type":"published","id":"json-r","name":"json-r","version":"2.3.0","description":"A BuckleScript lib for handling JSON in `Result` favor, written in [ReasonML](http://facebook.github.io/reason/).","author":"CHEN Xianan","license":"MIT","keywords":["json","bucklescript"],"body":"# JsonR\n\nA BuckleScript lib for handling JSON in `Result` favor, written in [ReasonML](http://facebook.github.io/reason/).\n\n## Usage\n\nAdd `json-r` to your project's dependencies by `yarn` or `npm`, And add it to `bs-dependencies` for `bsconfig.json`, e.g.\n\n```json\n{\n    \"name\": \"coolproj\",\n    \"bs-dependencies\": [\n      \"json-r\"\n    ]\n}\n```\n\n### Basic example\n\n```reason\n\nopen JsonR.Json;\nopen Js_result;\n\nlet json = parse_result json_source;\n\n/* Access a field and its value, return a Js_result type */\n\nlet title = json |> string_for \"title\";\n\n/* or more verbose */\nlet title = json |> member \"title\" |> to_string;\n\n\n/* you can also pass key path */\nlet age = json |> int_for \"author.age\";\n\n/ * or */\nlet age = json |> member \"author.age\" |> to_int;\n\nswitch age {\n| Ok a => DoWhatYouWant a\n| Error e => HeyWeCantParseOutTheAge_CheckTheErrorMessage e\n};\n\n```\n\nYou can open `__tests__/test.re` to view more examples.\n\n### Advance usage\n\nNeed to use the another `Result` type such as `Containers.Result`? Just `Module Json = JsonR.Impl Containers.Result;`.\n\n## LICENSE\n\nMIT.","analyzed":"2017-12-18T10:32:37.893Z","updated":"2017-12-18T10:32:37.893Z","stars":7,"score":0.6049850705439781,"quality":0.8124786531920637,"popularity":0.03233402942644605,"maintenance":0.9997844693917226,"homepageUrl":"https://github.com/cxa/JsonR","repositoryUrl":"https://github.com/cxa/JsonR","npmUrl":"https://www.npmjs.com/package/json-r","issuesUrl":"https://github.com/cxa/JsonR/issues","docsUrl":null}